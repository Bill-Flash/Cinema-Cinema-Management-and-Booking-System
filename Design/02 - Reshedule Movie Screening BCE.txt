title 02 - Reshedule Movie Screening BCE
actor "Staff" as a

boundary "StaffUI" as ui
control ": CinemaSystem" as cs
participant "Cinema" as c
entity "current : MovieScreening" as cms
entity "selected : MovieScreening" as sms
participant "ScreeningMapper" as sm
database db

a->ui:mousePressed(x: int, y: int)
activate ui
ui->ui:s:=xToScreen(x: int)
ui->ui:time:=yToTime(y: int)
ui->cs: selectMovieScreening(sId: Integer, time: LocalTime)
activate cs
loop for each current movie screening
cs->cms:t := getTime()
cs->cms:s := getSreen()
end
cs->cs:notifyObservers()
cs->ui:update()
cs-->ui:
deactivate cs
ui-->a:
deactivate ui

loop for everytime the mouse is moved
a->ui:mouseMoved(x: int, y: int)
activate ui
ui->ui:update()
ui-->a:
deactivate ui
end 

a->ui:mouseReleased(x: int, y: int)
activate ui
ui->ui:s:=xToScreen(x: int)
ui->ui:time:=yToTime(y: int)


ui->cs: resheduleSelected(s: Screen, time: LocalTime)
activate cs
expandableâˆ’ See diagram 01 - Shedule Movie Screening ACE(a/b)
cs->cs:checkScreeningGap()                                                       
end
expandableâˆ’ See diagram 01 - Shedule Movie Screening ECE
cs->cs:checkScreeningTime()                                                     
end

cs->c: screen: = getScreen(sId: int)
cs->sms:setScreen(screen: Screen)
cs->sms:setTime(time: LocalTime)

cs->c: updateMovieScreening(selected : MovieScreening)
activate c

c->sm:updateMovieScreening(ms: MovieScreening)
activate sm
sm->sm:performUpdate(sql: String)
activate sm
sm->db:executeUpdate(sql: String)
sm-->sm:
deactivate sm
sm-->c:
deactivate sm
c-->cs:
deactivate c
expandable- See diagram 00 - Display Data
cs->cs:notifyObservers()                        
end
cs-->ui:
deactivate cs
ui-->a:
deactivate ui