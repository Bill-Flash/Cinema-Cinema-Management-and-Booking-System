title 00 - Display Data
actor "Staff" as s
boundary "StaffUI" as ui
control ":CinemaSystem" as cs
participant "Cinema" as c
participant "ScreeningMapper" as sm
participant "MovieMapper" as mm
participant "ScreenMapper" as sm1
participant "TicketMapper" as tm

entity "PersistentScreening" as ps
entity "PersistentTicket" as ps1

database db

s->ui: submit(date : LocalDate)
activate ui

ui->cs:setDate(date : LocalDate)
activate cs

cs->c: getMovieScreenings(date : LocalDate)
activate c

c->sm: getMovieScreenings(date : LocalDate)
activate sm
sm->db:executeQuery(sql : String)

loop for every row returned the movie screenings
 sm->mm:m:=getMovieForOid(movie: Integer)
 sm->sm1:s:=getScreenForOid(screen: Integer)
 
loop for every row returned the sold_tickets for the selected movie screening
sm->tm: t:=getSoldTickets(ticket: Integer)
end
 
 sm->*ps:PersistentScreening(oid: Integer, m: Movie, s: Screen,\n sold_tickets: Ticket [ ], sDate: LocalDate, sTime: LocalTime)
 activate ps
 ps-->sm:
 deactivate ps
    
end  


sm-->c:return movie screenings
deactivate sm

c-->cs: return movie screenings
deactivate c
cs->cs:notifyObservers()
activate cs


cs->ui: update()
activate ui
ui->cs:date:=getDate()
ui->cs:screenings:=getScreenings()
ui-->cs:
deactivate ui
cs-->cs:

deactivate cs
cs-->ui:
deactivate cs

ui-->s:
deactivate ui

